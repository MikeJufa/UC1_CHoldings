LET yr = Year(ReloadTime());
SET copyright = 'Copyright 1993-$(yr) Qliktech International AB';

//REM To manually override where this app loads log data, please update the variable db_v_file_override as follow:
0 = auto = script will check for recent data in logging database
1 = file logs only (no database logs loaded)
2 = datbase logs only (no file data loaded except where file log data already stored in governanceLogContent QVDs);;

SET db_v_file_override = 0;

//REM END set manual override for log data source (Only update the script beyond here at your own risk!);
LET ReloadStartTime = now(1);
SET ahora =; SET msg =; SET skipped = 0; SET loaded = 0; SET textFile = ; // Reset these wariables;
SET app_name = 'Operation Monitor';
SET app_version = '7.15.0';
LET comp = ComputerName();
LET EngineVer = PurgeChar(EngineVersion(),chr(39));
LET startMsg_1 = 'Reloading $(app_name) $(app_version) from $(comp) running QIX Engine version $(EngineVer)';
LET startMsg = '$(stargMsg_1). '& If(db_v_file_override = 2, 'Database logs chosen', if(db_v_file_override = 1, 'File logs chosen', 'Default log source selected (will check database first, then files)'));
TRACE $(startMsg);

SET monthOfHistory = 3; //How many months of history should be available in the app.  More history = more processing, bigger app, etc.
LET cutoffDate = AddMonths(Today(1),-$(monthOfHistory),1);  //Filter individual .log files and baseTable; note: the 1
LET LastReloadTime = Timestamp(Alt(LastSuccessfulReloadStartTime, cutoffDate));
LET LastReloadCompare = num(LastReloadTime)-1;  //(Re-)load any logs updated within 24 hours of the last reload

LET serverLogFolder = 'lib://ServerLogFolder/';
LET archivedLogsFolder = 'lib://ArchivedLogsFolder';

LET baseFileName = 'governanceLogContent_$(app_version)';
LET baseTableName = '$(serverLogFolder)$(baseFileName)';
LET serviceFileName = 'governanceServiceLog_$(app_version)';
LET ServiceTableName = '$(serverLogFolder)$(serviceFileName)';
LET time_range_FileName = 'governance_time_range_ops_$(app_version)';
LET time_range_TableName = '$(serverLogFolder)$(time_range_FileName)';
LET date_time_FileName = 'governance_date_time_ops_$(app_version)';
LET date_time_TableName = '$(serverLogFolder)$(date_time_FileName)';

SET hideprefix = 'log'; //Hiding loglist from view, though preserving it for now (not dropping it)
SET firstReload = 0; //Reset this each time and let script verify if it is the first load

//Set date and time formats
SET TimeFormat = 'hh:mm:ss';
SET DateFormat = 'YYYY-MM-DD';
SET TimestampFormat = 'YYYY-MM-DD hh:mm:ss';

//Calendar Variables
LET vLast4Hours = Num(Timestamp(Now(1)-1/6)); //4 hours = 1 day / 24  hours * 4 hours = 1/6 Today
LET vLast24Hours = Num(Timestamp(Now(1)-1));
LET vLast72Hours = Num(Timestamp(Now(1)-3));
LET vLast7Days = Num(Timestamp(Now(1)-7));
LET vLast28Days = Num(Timestamp(Now(1)-28));
LET vLast30Days = Num(Timestamp(Now(1)-30));
LET vLast60Days = Num(Timestamp(Now(1)-60));
LET vLast90Days = Num(Timestamp(Now(1)-90));


//Export Dataset from QVF
Binary [lib://QlikShar(bocad_zhuf)/Apps/94e8246d-4355-4b25-8b4f-ad4733d97fa4];

Directory [lib://AttachedFiles/];

LET vNumTables = NoOfTables();

FOR i = 0 to NoOfTables()-1
    LET vTable = TableName(i);
    TRACE '$(vTable)';
    STORE [$(vTable)] INTO [$(vTable).qvd](qvd);
NEXT
//Export Dataset from QVF
